// <auto-generated />
using System;
using Exam.DAL.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exam.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231121050356_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Exam.Entities.Exams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DersinKodu")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<DateTime>("ImtahanTarixi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LessonsId")
                        .HasColumnType("int");

                    b.Property<decimal>("Qiymeti")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("SagirdinNomresi")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.HasIndex("LessonsId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Exam.Entities.Lessons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DersinAdi")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("DersinKodu")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("MuellimAdi")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("MuellimSoyadi")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("Sinifi")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("Exam.Entities.Students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<byte>("SagirdinNomresi")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Sinifi")
                        .HasColumnType("tinyint");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ExamsStudents", b =>
                {
                    b.Property<int>("ExamsId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("ExamsId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("ExamsStudents");
                });

            modelBuilder.Entity("LessonsStudents", b =>
                {
                    b.Property<int>("LessonsId")
                        .HasColumnType("int");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int");

                    b.HasKey("LessonsId", "StudentsId");

                    b.HasIndex("StudentsId");

                    b.ToTable("LessonsStudents");
                });

            modelBuilder.Entity("Exam.Entities.Exams", b =>
                {
                    b.HasOne("Exam.Entities.Lessons", null)
                        .WithMany("Exams")
                        .HasForeignKey("LessonsId");
                });

            modelBuilder.Entity("ExamsStudents", b =>
                {
                    b.HasOne("Exam.Entities.Exams", null)
                        .WithMany()
                        .HasForeignKey("ExamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam.Entities.Students", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LessonsStudents", b =>
                {
                    b.HasOne("Exam.Entities.Lessons", null)
                        .WithMany()
                        .HasForeignKey("LessonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam.Entities.Students", null)
                        .WithMany()
                        .HasForeignKey("StudentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Exam.Entities.Lessons", b =>
                {
                    b.Navigation("Exams");
                });
#pragma warning restore 612, 618
        }
    }
}
